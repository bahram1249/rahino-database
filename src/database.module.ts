import { DynamicModule, Module } from "@nestjs/common";
import { SequelizeModule, SequelizeModuleOptions } from "@nestjs/sequelize";
import { SequelizeOverrideModule } from "./override/sequelize-override.module";

@Module({
  // imports: [
  //   SequelizeModule.forRootAsync({
  //     imports: [ConfigModule],
  //     useFactory: (configService: ConfigService) => ({
  //       name: "sequelize_default",
  //       dialect: configService.get<Dialect>("DB_DIALECT"),
  //       host: configService.get<string>("DB_HOST"),
  //       port: configService.get<number>("DB_PORT"),
  //       username: configService.get<string>("DB_USER"),
  //       password: configService.get<string>("DB_PASS"),
  //       database: configService.get<string>("DB_NAME_DEVELOPMENT"),
  //       //[__dirname + '/models/**/*.entity.ts'],
  //       models: [
  //         User,
  //         Role,
  //         UserRole,
  //         Menu,
  //         Permission,
  //         PermissionGroup,
  //         RolePermission,
  //         AttachmentType,
  //         Attachment,
  //         PermissionMenu,
  //         Setting,
  //         WinstonLog,
  //         PersianDate,
  //         PCMPeriodType,
  //         PCMPeriod,
  //         PCMAge,
  //         PCMArticleType,
  //         PCMPublish,
  //         PCMArticle,
  //         EAVEntityModel,
  //         EAVEntityType,
  //         EAVEntity,
  //         EAVAttributeType,
  //         EAVAttribute,
  //         EAVEntityAttribute,
  //         EAVAttributeValue,
  //         EAVEntityAttributeValue,
  //         EAVEntityPhoto,
  //         EAVEntityVideo,
  //         ECPublishStatus,
  //         ECInventoryStatus,
  //         ECRequestLog,
  //         ECColor,
  //         ECGuarantee,
  //         ECGuaranteeMonth,
  //         ECBrand,
  //         ECProvince,
  //         ECCity,
  //         ECNeighborhood,
  //         ECAddress,
  //         ECProduct,
  //         ECVendor,
  //         ECVendorUser,
  //         ECVendorAddress,
  //         ECVariationPrice,
  //         ECInventory,
  //         ECInventoryPrice,
  //         ECUserSession,
  //         ECDiscountType,
  //         ECDiscountActionType,
  //         ECDiscountActionRule,
  //         ECDiscount,
  //         ECDiscountConditionType,
  //         ECDiscountCondition,
  //         ECStock,
  //         ECPaymentGateway,
  //         ECPostageFee,
  //         ECOrderStatus,
  //         ECOrderDetailStatus,
  //         ECOrderShipmentWay,
  //         ECOrder,
  //         ECPaymentStatus,
  //         ECPaymentType,
  //         ECPayment,
  //         ECOrderDetail,
  //         ECCourier,
  //         ECVendorCommissionType,
  //         ECVendorCommission,
  //         ECPaymentGatewayCommissionType,
  //         ECPaymentGatewayCommission,
  //         ECEntityTypeFactor,
  //         ECProductCommentStatus,
  //         ECProductComment,
  //         ECProductCommentFactor,
  //         ECInventoryTrackChangeStatus,
  //         ECInventoryHistory,
  //         ECPage,
  //         ECWallet,
  //         ECHomePage,
  //         ECEntityTypeSort,
  //         ECProductFavorite,
  //         ECSlugVersion,
  //         ECSlugVersionType,
  //         ECNotification,
  //         ECProductPriceFormula,
  //         ECSelectedProductType,
  //         ECSelectedProduct,
  //         ECSelectedProductItem,
  //         Buffet,
  //         BuffetGallery,
  //         BuffetType,
  //         BuffetCost,
  //         BuffetCity,
  //         CoffeOption,
  //         BuffetOption,
  //         BuffetMenuCategory,
  //         BuffetMenu,
  //         BuffetReserveStatus,
  //         BuffetReserveType,
  //         BuffetReserve,
  //         BuffetReserveDetail,
  //         BuffetIgnoreReserve,
  //         VW_BuffetReservers,
  //       ],
  //       autoLoadModels: configService.get("DB_AUTO_LOAD_MODELS") === "true",
  //       logging: configService.get("DB_LOG") === "true",
  //       synchronize: configService.get("DB_SYNCHRONIZE") === "true",
  //       timezone: configService.get("DB_TIMEZONE") || "fa-IR",
  //       sync: {
  //         force: false,
  //         alter: false,
  //       },
  //     }),
  //     inject: [ConfigService],
  //   }),
  // ],
  // providers: [...databaseProviders],
})
export class DatabaseModule {
  // static forRoot(options: DatabaseOptions): DynamicModule {
  //   return {
  //     module: DatabaseModule,
  //     imports: [
  //       SequelizeOverrideModule.override(),
  //       SequelizeModule.forRootAsync({
  //         imports: [DatabaseModule],
  //         useFactory: (databaseOptions: DatabaseOptions) => ({
  //           name: databaseOptions.connectionName,
  //           dialect: databaseOptions.dialect,
  //           host: databaseOptions.host,
  //           port: databaseOptions.port,
  //           username: databaseOptions.username,
  //           password: databaseOptions.password,
  //           database: databaseOptions.database,
  //           //models: [__dirname + '/models/**/*.entity.ts'],
  //           models: [
  //             User,
  //             Role,
  //             UserRole,
  //             Menu,
  //             Permission,
  //             PermissionGroup,
  //             RolePermission,
  //             AttachmentType,
  //             Attachment,
  //             PermissionMenu,
  //             Setting,
  //             WinstonLog,
  //             PersianDate,
  //             PCMPeriodType,
  //             PCMPeriod,
  //             PCMAge,
  //             PCMArticleType,
  //             PCMPublish,
  //             PCMArticle,
  //             EAVEntityModel,
  //             EAVEntityType,
  //             EAVEntity,
  //             EAVAttributeType,
  //             EAVAttribute,
  //             EAVEntityAttribute,
  //             EAVAttributeValue,
  //             EAVEntityAttributeValue,
  //             EAVEntityPhoto,
  //             EAVEntityVideo,
  //             ECPublishStatus,
  //             ECInventoryStatus,
  //             ECRequestLog,
  //             ECColor,
  //             ECGuarantee,
  //             ECGuaranteeMonth,
  //             ECBrand,
  //             ECProvince,
  //             ECCity,
  //             ECNeighborhood,
  //             ECAddress,
  //             ECProduct,
  //             ECVendor,
  //             ECVendorUser,
  //             ECVendorAddress,
  //             ECVariationPrice,
  //             ECInventory,
  //             ECInventoryPrice,
  //             ECUserSession,
  //             ECDiscountType,
  //             ECDiscountActionType,
  //             ECDiscountActionRule,
  //             ECDiscount,
  //             ECDiscountConditionType,
  //             ECDiscountCondition,
  //             ECStock,
  //             ECPaymentGateway,
  //             ECPostageFee,
  //             ECOrderStatus,
  //             ECOrderDetailStatus,
  //             ECOrderShipmentWay,
  //             ECOrder,
  //             ECPaymentStatus,
  //             ECPaymentType,
  //             ECPayment,
  //             ECOrderDetail,
  //             ECCourier,
  //             ECVendorCommissionType,
  //             ECVendorCommission,
  //             ECPaymentGatewayCommissionType,
  //             ECPaymentGatewayCommission,
  //             ECEntityTypeFactor,
  //             ECProductCommentStatus,
  //             ECProductComment,
  //             ECProductCommentFactor,
  //             ECInventoryTrackChangeStatus,
  //             ECInventoryHistory,
  //             ECPage,
  //             ECWallet,
  //             ECHomePage,
  //             ECEntityTypeSort,
  //             ECProductFavorite,
  //             ECSlugVersion,
  //             ECSlugVersionType,
  //             ECNotification,
  //             ECProductPriceFormula,
  //             ECSelectedProductType,
  //             ECSelectedProduct,
  //             ECSelectedProductItem,
  //             Buffet,
  //             BuffetGallery,
  //             BuffetType,
  //             BuffetCost,
  //             BuffetCity,
  //             CoffeOption,
  //             BuffetOption,
  //             BuffetMenuCategory,
  //             BuffetMenu,
  //             BuffetReserveStatus,
  //             BuffetReserveType,
  //             BuffetReserve,
  //             BuffetReserveDetail,
  //             BuffetIgnoreReserve,
  //             VW_BuffetReservers,
  //           ],
  //           autoLoadModels: databaseOptions.autoLoadModels,
  //           logging: databaseOptions.logging,
  //           synchronize: databaseOptions.synchronize,
  //           timezone: databaseOptions.timezone,
  //           sync: {
  //             force: false,
  //             alter: false,
  //           },
  //         }),
  //         inject: [DATABASE_CONFIG_OPTIONS],
  //       }),
  //     ],
  //     providers: [
  //       {
  //         provide: DATABASE_CONFIG_OPTIONS,
  //         useValue: options,
  //       },
  //     ],
  //     exports: [DATABASE_CONFIG_OPTIONS],
  //   };
  // }

  // static forRootAsync(options: DatabaseAsyncOptions): DynamicModule {

  //   return {
  //     module: DatabaseModule,
  //     imports: [
  //       SequelizeOverrideModule.override(),
  //       SequelizeModule.forRootAsync({
  //         imports: [DatabaseModule],
  //         useFactory: (databaseOptions: DatabaseOptions) => ({
  //           name: databaseOptions.connectionName,
  //           dialect: databaseOptions.dialect,
  //           host: databaseOptions.host,
  //           port: databaseOptions.port,
  //           username: databaseOptions.username,
  //           password: databaseOptions.password,
  //           database: databaseOptions.database,
  //           //models: [__dirname + '/models/**/*.entity.ts'],
  //           models: [
  //             User,
  //             Role,
  //             UserRole,
  //             Menu,
  //             Permission,
  //             PermissionGroup,
  //             RolePermission,
  //             AttachmentType,
  //             Attachment,
  //             PermissionMenu,
  //             Setting,
  //             WinstonLog,
  //             PersianDate,
  //             PCMPeriodType,
  //             PCMPeriod,
  //             PCMAge,
  //             PCMArticleType,
  //             PCMPublish,
  //             PCMArticle,
  //             EAVEntityModel,
  //             EAVEntityType,
  //             EAVEntity,
  //             EAVAttributeType,
  //             EAVAttribute,
  //             EAVEntityAttribute,
  //             EAVAttributeValue,
  //             EAVEntityAttributeValue,
  //             EAVEntityPhoto,
  //             EAVEntityVideo,
  //             ECPublishStatus,
  //             ECInventoryStatus,
  //             ECRequestLog,
  //             ECColor,
  //             ECGuarantee,
  //             ECGuaranteeMonth,
  //             ECBrand,
  //             ECProvince,
  //             ECCity,
  //             ECNeighborhood,
  //             ECAddress,
  //             ECProduct,
  //             ECVendor,
  //             ECVendorUser,
  //             ECVendorAddress,
  //             ECVariationPrice,
  //             ECInventory,
  //             ECInventoryPrice,
  //             ECUserSession,
  //             ECDiscountType,
  //             ECDiscountActionType,
  //             ECDiscountActionRule,
  //             ECDiscount,
  //             ECDiscountConditionType,
  //             ECDiscountCondition,
  //             ECStock,
  //             ECPaymentGateway,
  //             ECPostageFee,
  //             ECOrderStatus,
  //             ECOrderDetailStatus,
  //             ECOrderShipmentWay,
  //             ECOrder,
  //             ECPaymentStatus,
  //             ECPaymentType,
  //             ECPayment,
  //             ECOrderDetail,
  //             ECCourier,
  //             ECVendorCommissionType,
  //             ECVendorCommission,
  //             ECPaymentGatewayCommissionType,
  //             ECPaymentGatewayCommission,
  //             ECEntityTypeFactor,
  //             ECProductCommentStatus,
  //             ECProductComment,
  //             ECProductCommentFactor,
  //             ECInventoryTrackChangeStatus,
  //             ECInventoryHistory,
  //             ECPage,
  //             ECWallet,
  //             ECHomePage,
  //             ECEntityTypeSort,
  //             ECProductFavorite,
  //             ECSlugVersion,
  //             ECSlugVersionType,
  //             ECNotification,
  //             ECProductPriceFormula,
  //             ECSelectedProductType,
  //             ECSelectedProduct,
  //             ECSelectedProductItem,
  //             Buffet,
  //             BuffetGallery,
  //             BuffetType,
  //             BuffetCost,
  //             BuffetCity,
  //             CoffeOption,
  //             BuffetOption,
  //             BuffetMenuCategory,
  //             BuffetMenu,
  //             BuffetReserveStatus,
  //             BuffetReserveType,
  //             BuffetReserve,
  //             BuffetReserveDetail,
  //             BuffetIgnoreReserve,
  //             VW_BuffetReservers,
  //           ],
  //           autoLoadModels: databaseOptions.autoLoadModels,
  //           logging: databaseOptions.logging,
  //           synchronize: databaseOptions.synchronize,
  //           timezone: databaseOptions.timezone,
  //           sync: {
  //             force: false,
  //             alter: false,
  //           },
  //         }),
  //         inject: [DATABASE_CONFIG_OPTIONS],
  //       }),
  //     ],
  //     providers: [
  //       {
  //         provide: DATABASE_CONFIG_OPTIONS,
  //         useFactory: options.useFactory,
  //         inject: options.inject,
  //       },
  //     ],
  //     exports: [DATABASE_CONFIG_OPTIONS],
  //   };
  // }
  static forRootAsync(options: {
    useFactory: (
      ...args: any[]
    ) => Promise<SequelizeModuleOptions> | SequelizeModuleOptions;
    inject?: any[];
  }): DynamicModule {
    return {
      module: DatabaseModule,
      imports: [
        SequelizeOverrideModule.override(),
        SequelizeModule.forRootAsync({
          useFactory: options.useFactory,
          inject: options.inject || [],
        }),
      ],
      exports: [SequelizeModule],
    };
  }
}
